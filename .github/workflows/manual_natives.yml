name: Build Linux ARM64 Desktop Natives

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-arm64:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU ARM64
      uses: docker/setup-qemu-action@v2
      with:
        platforms: arm64

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build in ARM64 container
      uses: addnab/docker-run-action@v3
      with:
        image: debian:bookworm
        options: |
          --platform linux/arm64
          --privileged
          --volume ${{ github.workspace }}:/build
        run: |
          # Install ARM64-compatible build tools
          apt-get update && apt-get install -y \
              openjdk-17-jdk \
              crossbuild-essential-arm64 \
              mesa-common-dev:arm64 libxxf86vm-dev:arm64 \
              libxrandr-dev:arm64 libx11-dev:arm64 \
              zlib1g:arm64 ccache gradle

          # Configure Java environment
          export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-arm64
          export PATH=$PATH:$JAVA_HOME/bin

          # Build natives with Android exclusion
          cd /build
          ./gradlew jnigen jnigenBuildLinuxARM64 \
            --exclude-project :extensions:gdx-android \
            --exclude-project :tests:gdx-tests-android \
            --no-daemon \
            --warning-mode none

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-arm64-natives
        path: |
          libgdx/jnigen-build/libs/linux/arm64/*
          extensions/gdx-bullet/jnigen-build/libs/linux/arm64/*
